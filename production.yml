version: '3.5'

volumes:
  production_traefik: {}

x-genericdjango: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: registry.digitalocean.com/choosefi/community_choosefi_site_production_django
    depends_on:
      - redis
    env_file:
      - .envs/.production/.django
      - .envs/.production/.postgres
    command: /start

services:
  django: 
    <<: *django
    labels:
      - traefik.enable=true

      - traefik.http.routers.community_route_http.rule=Host(`community.choosefi.com`)
      - traefik.http.routers.community_route_http.entrypoints=http
      - "traefik.http.routers.community_route_http.middlewares=redirect-to-ssl@file"

      - traefik.http.routers.community_route_https.rule=Host(`community.choosefi.com`)
      - traefik.http.routers.community_route_https.entrypoints=https
      - traefik.http.routers.community_route_https.tls.certresolver=choosefi_acme_resolver
      - traefik.http.middlewares.corsheader.headers.accesscontrolalloworigin=*
      - traefik.http.routers.community_route_https.middlewares=corsheader
    networks:
      - web
      - redis
    expose:
      - "5000"

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    # image: community_choosefi_site_production_traefik
    image: registry.digitalocean.com/choosefi/community_choosefi_site_production_traefik
    #depends_on:
    #  - django
    volumes:
      - production_traefik:/etc/traefik/acme
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web

  redis:
    image: redis:5.0
    networks:
      - redis

  celeryworker:
    <<: *django
    image: registry.digitalocean.com/choosefi/community_choosefi_site_production_celeryworker
    command: /start-celeryworker
    networks:
      - redis

  celerybeat:
    <<: *django
    image: registry.digitalocean.com/choosefi/community_choosefi_site_production_celerybeat
    command: /start-celerybeat
    networks:
      - redis

  flower:
    <<: *django
    image: registry.digitalocean.com/choosefi/community_choosefi_site_production_flower
    ports:
      - "5555:5555"
    command: /start-flower
    networks:
      - web
      - redis

networks:
  web:
    name: web_network

  redis:
    name: redis_network

